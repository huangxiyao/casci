---
- name: Copy casfw.conf file to -> /opt/casfw/
  copy: src=casfw.conf dest={{ casfw_home }}/ mode="u+rwx,g+rx,o+rx" owner={{ casfw_user }} group={{ casfw_group }} force

- name: Check if cloud or webhost apache
  script: casci-proxy-config.sh apacheTypeCheck {{ casfw_home }}
  register: apachetypecheck

- name: Copy /opt/casfw/casfw.conf to /etc/httpd/conf.d/
  script: casci-proxy-config.sh copyCasfwConfToCloudApache {{ casfw_home }}
  su: no
  when: apachetypecheck.stdout == 'cloudhost'

- name: Restart Cloud Apache Instance
  script: casci-proxy-config.sh restartCloudApacheInstance {{ casfw_home }}
  su: no
  when: apachetypecheck.stdout == 'cloudhost'

- name: Copy /opt/casfw/casfw.conf to /opt/webhost/local/WHA-General-Inst/apache/conf.d
  script: casci-proxy-config.sh copyCasfwConfToWebhostApache {{ casfw_home }}
  when: apachetypecheck.stdout == 'webhost'

- name: Restart Webhost Apache Instance
  script: casci-proxy-config.sh restartWebhostApacheInstance {{ casfw_home }}
  when: apachetypecheck.stdout == 'webhost'

- name: Final cleanup
  script: casci-proxy-config.sh finalCleanup {{ casfw_home }}

########## validation #################
- name: Wait for apache port to come up
  wait_for: host={{ inventory_hostname }} port=80 delay=15 state=started
  su: no
  delegate_to: localhost

- name: validate apache instance health page
  uri: url={{ item.url }} status_code={{ item.statuscode }}
  retries: 5
  delegate_to: localhost
  su: no
  with_items:
    - { url: 'http://{{ inventory_hostname }}/{{ app }}', statuscode: '200' }